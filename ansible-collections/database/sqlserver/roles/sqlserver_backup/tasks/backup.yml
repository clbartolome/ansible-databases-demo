---
# tasks file for oracle_backup
- name: Get current date
  ansible.builtin.set_fact:
    backup_time: "{{ ansible_date_time.iso8601_basic_short }}"
  when: inventory_hostname == origin

- name: Create a directory if it does not exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
    group: mssql
    owner: mssql
  loop:
    - "/home/mssql/backups/{{ origin }}"
  when: inventory_hostname == origin

- name: Template SQL Script using provided variables
  ansible.builtin.template:
    src: "backup.rmn.j2"
    dest: "/tmp/backup_{{ backup_time }}.sql"
    mode: "0755"
  register: backup_script
  when: inventory_hostname == origin

- name: Execute Backup operation
  ansible.builtin.shell: "sqlcmd -S localhost -U SA -b -C -i /tmp/backup_{{ backup_time }}.sql"
  args:
    executable: /bin/bash
  environment:
    SQLCMDPASSWORD: "{{ lookup('ansible.builtin.env', 'MSSQL_PASSWORD') }}"
  register: backup_result
  changed_when: "backup_result.rc == 0"
  failed_when: "backup_result.rc != 0"
  when: inventory_hostname == origin

- name: Find Current backups
  ansible.builtin.find:
    paths:
      - /home/mssql/backups/
    file_type: file
    recurse: true
    use_regex: true
    patterns:
      - '^backup_*'
  register: files

- name: Get paths
  ansible.builtin.set_fact:
    # yamllint disable
    backups: "{{ ansible_play_hosts | map('extract', hostvars, 'files') | map(attribute='files') | flatten | map(attribute='path') | flatten | map('regex_replace', '^.*/([^/]+/[^/]+)$', '\\1') | list }}"
  run_once: true

- name: Update Restore Job Template with New Backups
  ansible.builtin.set_stats:
    data:
      survey: "{{ lookup('ansible.builtin.template', 'restore_survey.json.j2') }}"
