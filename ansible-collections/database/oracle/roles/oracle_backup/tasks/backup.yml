---
# tasks file for oracle_backup
- name: Get current date
  ansible.builtin.set_fact:
    backup_time: "{{ ansible_date_time.iso8601_basic_short }}"
  when: inventory_hostname == origin

- name: Create a directory if it does not exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - "/home/oracle/backups/{{ origin }}/backup_{{ backup_time }}"
    - "/home/oracle/backups/{{ origin }}/backup_{{ backup_time }}/controlfile"
  when: inventory_hostname == origin

- name: Get DBId
  ansible.builtin.command: "echo 'select DBID from v$database;' | sqlplus -s / as sysdba | grep ^[0-9]*[0-9]$"
  register: dbid
  changed_when: dbid.rc == 0
  when: inventory_hostname == origin

- name: Store DBId
  ansible.builtin.lineinfile:
    path: "/home/oracle/backups/{{ origin }}/backup_{{ backup_time }}/dbid"
    line: "{{ dbid.stdout }}"
    create: true
    mode: "0755"
  when: inventory_hostname == origin

- name: Template RMAN Script using provided variables
  ansible.builtin.template:
    src: "backup.rmn.j2"
    dest: "/tmp/backup_{{ backup_time }}.rmn"
    mode: "0755"
  register: backup_script
  when: inventory_hostname == origin

- name: Execute RMAN operation
  ansible.builtin.shell: "source .bash_profile && rman target / nocatalog < {{ backup_script.dest }} log=full_back.log"
  args:
    chdir: /home/oracle
    executable: /bin/bash
  register: backup_result
  changed_when: "backup_result.rc == 0"
  failed_when: "backup_result.rc != 0"
  when: inventory_hostname == origin

- name: Find Current backups
  ansible.builtin.find:
    paths:
      - /home/oracle/backups/
    file_type: directory
    recurse: true
    use_regex: true
    patterns:
      - '^backup_*'
  register: files

- name: Get paths
  ansible.builtin.set_fact:
    paths: "{{ ansible_play_hosts | map('extract', hostvars, 'files') | map(attribute='files') | flatten | map(attribute='path') | flatten }}"
    keep: 2
  run_once: true
  
- name: Build list of Backups
  ansible.builtin.set_fact:
    backups: "{{ paths.split('/') | slice(-keep) | join('/') }}"
    keep: 2
  run_once: true

- name: Update Restore Job Template with New Backups
  ansible.builtin.set_stats:
    data:
      survey: "{{ lookup('ansible.builtin.template', 'restore_survey.json.j2') }}"
